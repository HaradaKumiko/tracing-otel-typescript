version: '3.8'
services:
  app-backend:
    container_name: app-backend
    build:
      context: ..
      dockerfile: deploy/Dockerfile
    ports:
      - "6000:6000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@app-postgres:5432/postgres?schema=public
      - NODE_ENV=development
    depends_on:
      app-postgres:
        condition: service_healthy
    logging:
      driver: fluentd
      options:
        tag: app-backend
        fluentd-sub-second-precision: 'true'
    networks:
      - research-monitoring

  app-postgres:
    container_name: app-postgres
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - research-monitoring

  app-jaeger:
    container_name: app-jaeger
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"  # Jaeger UI
      - "4318:4318"    # OTLP HTTP
      - "4317:4317"    # OTLP gRPC
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - research-monitoring

  app-prometheus:
    container_name: app-prometheus
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    depends_on:
      - app-node-exporter
    networks:
      - research-monitoring

  app-node-exporter:
    container_name: app-node-exporter
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - research-monitoring

  app-grafana:
    container_name: app-grafana
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards:/etc/grafana/dashboards
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    depends_on:
      - app-prometheus
      - app-jaeger
    networks:
      - research-monitoring

  app-loki:
    container_name: app-loki
    image: grafana/loki:latest
    ports: 
      - "3100:3100"
    volumes: 
      - ./loki:/etc/loki
    command: -config.file=/etc/loki/config.yaml
    networks:
      - research-monitoring

  app-fluentbit: 
    container_name: app-fluentbit
    image: fluent/fluent-bit:latest
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    volumes:
      - ./fluentbit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
      - ../logs:/example/logs
    networks:
      - research-monitoring

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  research-monitoring:
    driver: bridge
